services:
  app:
    container_name: app
    build:
      context: ./app
      target: dev
      dockerfile: Dockerfile
    tty: true
    working_dir: /opt/client
    volumes:
      - ./app:/opt/client
      - /opt/client/node_modules
    env_file:
      - .env
    ports:
      - "5173:5173"
    environment:
      - WDS_SOCKET_HOST=127.0.0.1 
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true 
    command: "npm run dev -- --host"
    depends_on:
      - db
    networks:
      - app-network

  # app:
  #   container_name: app
  #   build:
  #     context: ./app
  #     dockerfile: Dockerfile
  #   restart: unless-stopped
  #   depends_on:
  #      - nginx
  #      - server
  #      - db
  #   networks:
  #     - app-network

  server:
    container_name: server
    build:
      context: ./server
      target: dev
    tty: true
    working_dir: /opt/server
    volumes:
      - ./server:/opt/server
      - /opt/server/node_modules
    env_file:
      - .env
    ports:
      - "3000:3000"
    depends_on:
      - db
    restart: unless-stopped
    command: npm run dev
    networks:
      - app-network

  db:
    container_name: db
    image: postgres:16.3-alpine3.20
    environment:
      - POSTGRES_DB=${PG_NAME}
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
    volumes:
      - ${PG_LOCAL_HOME}:/var/lib/postgresql/data
    expose:
      - "5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
    networks:
      - app-network

  pgadmin:
    container_name: pgadmin
    depends_on:
      - db
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "8080:80"
    restart: no
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
    # driver_opts:
    #   com.docker.network.driver.mtu: 1450